;;**********************************************************************
;;
;; Title:       ViewModel.dbc
;;
;; Type:        Class
;;
;; Description: data to UI connector
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright (c) 2016, Synergex International, Inc. All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************
import System
import System.Collections.Generic
import System.Text

import Symphony.Conductor.ViewModel
import System.Windows
import System.Collections.ObjectModel
import DataObjects

;;need to import the required namespace
import Synergex.SynergyDE.Select
import Symphony.Conductor.Commands

namespace InnerJoin
	
	public class ViewModel extends BaseViewModel
		
		public method ViewModel
			in req sender		,@FrameworkElement
			endparams
			parent(sender)
		proc
			;;ensure we have sample data based installed
			CommonLogic.General.CheckDataInstall()
			
			SupplierList = new ObservableCollection<Supplier_Data>()
			OrderView = new ObservableCollection<OrderBook>()
			
			data supplier		,STRSupplier
			data orderHeader	,STROrder_header
			
			;;just load all the suppliers first
			foreach supplier in new Select(new From("SYMPHONYDATA:suppliers.ism", supplier))
			begin
				SupplierList.Add(new Supplier_Data(supplier))
			end
			
			data resultset	,@rows
			
			data isChanged,	boolean
			
			;;load only suppliers with outstading orders

			data orderBookItem	,@OrderBook

			foreach resultset in new select(
				&	new from("symphonydata:suppliers.ism", supplier)
				&	.InnerJoin(new from("symphonydata:orders.ism", orderheader), 
				&	(on)(supplier.str_supplier_id == orderheader.str_supplierid))
				&	).join()
			begin
				;;move the data from the joinselect to our model data
				resultset.RowInfo(supplier, , , isChanged)
				if (isChanged)
				begin
					data obi	,@OrderBook
					resultset.fill(supplier)
					obi = new OrderBook(supplier)
					orderBookItem = obi
					OrderView.Add(orderBookItem)
				end
				;;get the order item
				resultset.fill(orderheader)
				orderBookItem.Orders.Add(new Order_header_Data(orderHeader))
			end
		endmethod
		
		;;; <summary>
		;;; Collection that raises "CollectionChanged" events when items in it are added.
		;;; </summary>
		public property SupplierList, @ObservableCollection<Supplier_Data>
			method get
			endmethod
			method set
			endmethod
		endproperty
		
		public property OrderView, @ObservableCollection<OrderBook>
			method get
			endmethod
			method set
			endmethod
		endproperty

	endclass
	
	public class OrderBook

		public method OrderBook
			in req suppiler		,STRSupplier
			endparams
		proc
			SupplierDetails = new Supplier_Data(suppiler)
			Orders = new ObservableCollection<Order_header_Data>()
		endmethod

		public property SupplierDetails, @Supplier_Data
			method get
			endmethod
			method set
			endmethod
		endproperty
		
		
		public property Orders, @ObservableCollection<Order_header_Data>
			method get
			endmethod
			method set
			endmethod
		endproperty
		
		
	endclass


endnamespace
