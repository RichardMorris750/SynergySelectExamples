;;**********************************************************************
;;
;; Title:       Initialize.dbc
;;
;; Type:        Class
;;
;; Description: Basic applcaiton logic
;;
;; Author:      Richard C. Morris, Synergex Professional Services Group
;;
;; Copyright (c) 2016, Synergex International, Inc. All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************import System
import System.Collections.Generic
import System.Text


namespace CommonLogic

	public static class General
	
		static method General
			endparams
		proc

			;;ensure we anchor things to the UI
			Symphony.Conductor.Static.ThreadSafe.AnchorToUIThread()
		endmethod

		public static method CheckDataInstall, void
			endparams
		proc
			data logValue	,a20
			data logLength	,i4
			getlog("SYMPHONYDATA", logValue, logLength)
			if (!logLength)
			begin
				System.Windows.Forms.MessageBox.Show("Please install the Symphony Framework Sample Database (www.symphonyframework.net)")
				stop;;!
			end
		endmethod

		public static method StartLogging, void
			endparams
		proc
			data status ,int
			setlog("DBG_SELECT", "1", status)
			setlog("DBG_SELECT_FILE", "SYMPHONYDATA:select_log_file.log", status)
		endmethod

		public static method FinishLogging	,@List<String>
			endparams
		proc
			data response = new List<String>()

			data chn	,i4	,0
			data inBuf		,a2000
			open(chn, i, "SYMPHONYDATA:select_log_file.log")
			repeat
			begin
				reads(chn, inBuf, endOfFile)
				response.Add((string)%atrim(inBuf))
			end
		EndOfFile,
			close(chn)

			delet("SYMPHONYDATA:select_log_file.log")
			mreturn response
			
		endmethod
	endclass

endnamespace
